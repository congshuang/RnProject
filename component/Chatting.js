/** * Sample React Native App * https://github.com/facebook/react-native * @flow */import React, { Component } from 'react';import {    Platform,    StyleSheet,    Text,    View,    ToolbarAndroid,    ScrollView,    ListView,    Image,    TouchableOpacity,    ToastAndroid} from 'react-native';import TWebView from '../view/webviews'import  Util from '../Utils/util';import Storage  from '../Utils/storage';const nearByURL = 'http://219.145.160.7:8381/index.html';import Header from './Header';{/**/}const message ={};export default class Chatting extends Component<{}> {    constructor(props){        super(props);        this.state={            id:0,            socket:''        }    }    static navigationOptions = ({navigation, screenProps}) => ({        // 这里面的属性和App.js的navigationOptions是一样的。        headerTitle: '通讯录',        gestureResponseDistance: {horizontal: 300},        //设置跳转页面左侧返回箭头后面的文字，默认是上一个页面的标题        headerBackTitle: null,        //顶部标题栏的样式        headerStyle: {            backgroundColor:'#0A66D4',            height:50        },        //顶部标题栏文字的样式        headerTitleStyle: {            color:'#fff',            fontSize: 19,            alignSelf: 'center',        },        //返回按钮的颜色        headerTintColor: 'white',        headerRight: (<View/>),        headerLeft: (<View/>)        //设置顶部导航栏左边的视图        //设置顶部导航栏左边的视图  和 解决当有返回箭头时，文字不居中    });    render() {        return (            <View style={styles.container}>                <Header navigation={this.props.navigation} isShowLeft={false} title="通讯录"/>                <TouchableOpacity style={[styles.item,{marginTop:5}]} onPress={this._onOpenItem.bind(this,'GroupList')}>                    <Image source={require('../state/qunliao.png')} style={styles.image} resizeMode='contain'/>                    <Text style={styles.text}>群聊</Text>                    <Image source={require('../state/yjt.png')} style={styles.img} resizeMode='contain'/>                </TouchableOpacity>                <TouchableOpacity style={[styles.item]} onPress={this._onOpenItem.bind(this,'ChatBox')}>                    <Image source={require('../state/xiaoxi.png')} style={styles.image} resizeMode='contain'/>                    <Text style={styles.text}>消息</Text>                    <Image source={require('../state/yjt.png')} style={styles.img} resizeMode='contain'/>                </TouchableOpacity>                <TouchableOpacity style={[styles.item]} onPress={this._onOpenItem.bind(this,'Chatlist')}>                    <Image source={require('../state/tongxunlu.png')} style={styles.image} resizeMode='contain'/>                    <Text style={styles.text}>通讯录</Text>                    <Image source={require('../state/yjt.png')} style={styles.img} resizeMode='contain'/>                </TouchableOpacity>            </View>        );    }    //ChatBoxGrid是群聊的聊天是ChatBox现在是假的    _onOpenItem(demo){        this.props.navigation.navigate(demo,{            socket:this.state.socket        });    }    componentWillMount() {        let _this = this;        Storage.get("id").then((id) => {            _this.setState({                id:id            });        });    }    componentDidMount() {        let _this = this;        let socket = new WebSocket('ws://219.145.160.7:3049/ws');        socket.onopen = () => {            // 打开一个连接            message.version = "1.0";            message.deviceid = "";            message.cmd = 1;            message.sender = _this.state.id;            message.msgtype = 1;            message.flag = 1;            message.platform = "chrome";            message.version = "60.0.3112.113";            message.token = _this.state.id;            socket.send(JSON.stringify(message)); // 发送一个消息        };        socket.onerror = (e) => {            // 发生了一个错误            /*alert("message"+e.message);*/        };        socket.onclose = (e) => {            // 连接被关闭了           /* alert("code"+e.code+"reason"+e.reason);*/            ToastAndroid.show("服务异常,正在紧急修复,请耐心等待",ToastAndroid.LONG);        };        this.setState({            socket:socket        });    }}const styles = StyleSheet.create({    container: {        flex: 1,        backgroundColor: '#F5FCFF',    },    item:{        width:Util.size.width,        height:50,        paddingLeft:10,        borderBottomWidth: Util.pixel,        borderBottomColor:'#ccc',        flexDirection:'row',        alignItems:'center'    },    image:{        width:40,        height:40,        marginRight:10    },    img:{        width:20,        height:20,        marginRight:10    },    text:{        fontSize:18,        fontWeight:'100',        width:Util.size.width-90    }});